# Test on morning of 03-20 using compile.py:
Program(statements=[Function(name=Name(str='fact'),
                             params=[Name(str='n')],
                             statements=[IfElse(condition=Relation(op=RelationOp(name='<'), left=LocalName(str='n'), right=Integer(n=2)),
                                                iflist=[Return(value=Integer(n=1))],
                                                elselist=[LocalVar(name=Name(str='x')),
                                                          Assign(left=LocalName(str='x'), right=Integer(n=1)),
                                                          LocalVar(name=Name(str='result')),
                                                          Assign(left=LocalName(str='result'), right=Integer(n=1)),
                                                          While(condition=Relation(op=RelationOp(name='<'), left=LocalName(str='x'), right=LocalName(str='n')),
                                                                statements=[Assign(left=LocalName(str='result'),
                                                                                   right=Multiply(left=LocalName(str='result'), right=LocalName(str='x'))),
                                                                            Assign(left=LocalName(str='x'), right=Add(left=LocalName(str='x'), right=Integer(n=1)))]),
                                                          Return(value=Multiply(left=LocalName(str='result'), right=LocalName(str='n')))]),
                                         Return(value=Integer(n=0))]),
                    GlobalVar(name=Name(str='x')),
                    Function(name=Name(str='main'),
                             params=[],
                             statements=[Assign(left=GlobalName(str='x'), right=Integer(n=1)),
                                         While(condition=Relation(op=RelationOp(name='<'), left=GlobalName(str='x'), right=Integer(n=10)),
                                               statements=[Print(value=CallFn(name=Name(str='fact'), params=[GlobalName(str='x')])),
                                                           Assign(left=GlobalName(str='x'), right=Add(left=GlobalName(str='x'), right=Integer(n=1)))]),
                                         Return(value=Integer(n=0))])])
